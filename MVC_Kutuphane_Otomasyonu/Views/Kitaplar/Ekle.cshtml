@model MVC_Kutuphane_Otomasyonu.Entities.Model.Kitaplar
@{
    ViewBag.Title = "Ekle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="row">
    <div class="col-lg">
        <div class="ibox">
            <div class="ibox-head">
                Kitap  Ekleme Sayfası

            </div>

            <div class=" ibox-body">
                @using (Html.BeginForm("Ekle", "Kitaplar", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                    <div class="form-group">
                       
                        @Html.DisplayNameFor(x => x.KitapTurleri.KitapTuru)
                        @Html.DropDownListFor(x => x.KitapTuruId, (SelectList)ViewBag.Liste,"-Seçim yapınız-",new {@class="form-control"})
                        @Html.ValidationMessageFor(x => x.KitapTuruId, " ", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                       
                        @Html.DisplayNameFor(x => x.BarkodNo)
                        @Html.TextBoxFor(x => x.BarkodNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.BarkodNo, " ", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        @Html.DisplayNameFor(x => x.KitapAdi)
                        @Html.TextBoxFor(x => x.KitapAdi, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.KitapAdi, " ", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        @Html.DisplayNameFor(x => x.Yazari)
                        @Html.TextBoxFor(x => x.Yazari, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Yazari, " ", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        @Html.DisplayNameFor(x => x.YayinEvi)
                        @Html.TextBoxFor(x => x.YayinEvi, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.YayinEvi, " ", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        @Html.DisplayNameFor(x => x.StokAdedi)
                        @Html.TextBoxFor(x => x.StokAdedi, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.StokAdedi, " ", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        @Html.DisplayNameFor(x => x.SayfaSayisi)
                        @Html.TextBoxFor(x => x.SayfaSayisi, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.SayfaSayisi, " ", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">

                        @Html.DisplayNameFor(x => x.Aciklama)
                        @Html.TextAreaFor(x => x.Aciklama, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.StokAdedi, " ", new { @class = "text-danger" })
                    </div>
                    <div class = "form-group" >
                        <button type="submit" class="btn btn-success">Ekle</button>

                    </div>

                }



            </div>
        </div>

    </div>

</div>
